AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: lutils SAM app

Globals:
  Function:
    Timeout: 900

Resources:
  ################################
  ### Lambdas
  ################################
  S3TextLinesToSNSLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lutil_s3_text_lines_to_sns/
      Handler: app.lambda_handler
      Runtime: python3.7
      ReservedConcurrentExecutions: 10
      Tags:
        Type: "lutils"
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*"
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*/*"
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "sns:Publish"
              Resource: "*"
      Environment:
        Variables:
          sns_arn: "arn:aws:sns:us-east-1:112280397275:lutil_s3_text_lines"
          region: !Sub "${AWS::Region}"
          accountid: !Sub "${AWS::AccountId}"
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref ProcessingBucket
            Events: s3:ObjectCreated:*
            Filter: 
              S3Key: 
                Rules:
                - Name: prefix
                  Value: lutil_s3_text_lines_to_sns

  S3FilenamesToSNSLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lutil_s3_filenames_to_sns/
      Handler: app.lambda_handler
      Runtime: python3.7
      ReservedConcurrentExecutions: 10
      Tags:
        Type: "lutils"
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "s3:List*"
              Resource: !Sub "arn:aws:s3:::*"
            - Effect: Allow
              Action: "s3:List*"
              Resource: !Sub "arn:aws:s3:::*/*"
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "sns:Publish"
              Resource: "*"
      Environment:
        Variables:
          sns_arn: "arn:aws:sns:us-east-1:112280397275:lutil_s3_text_lines"
          region: !Sub "${AWS::Region}"
          accountid: !Sub "${AWS::AccountId}"
##      Events:
##        S3Event:
##          Type: S3
##          Properties:
##            Bucket: !Ref ProcessingBucket
##            Events: s3:ObjectCreated:*
##            Filter: 
##              S3Key: 
##                Rules:
##                - Name: prefix
##                  Value: lutil_s3_text_lines_to_sns

  DownloadURLLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lutil_download_url/
      Handler: app.lambda_handler
      Runtime: python3.7
      ReservedConcurrentExecutions: 25
      Tags:
        Type: "lutils"
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*"
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*/*"
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "sns:*"
              Resource: "*"
      Environment:
        Variables:
          s3_bucket: !Ref ProcessingBucket
          use_guids_for_filenames: "no"
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref DownloadURLSNS

  DownloadURLSeleniumLambda:
    Type: AWS::Serverless::Function 
    Properties:
      Description: Downloads a URL using Selenium
      CodeUri: lutil_download_url_selenium/
      Handler: app.lambda_handler
      Runtime: python3.7
      ReservedConcurrentExecutions: 25
      Layers: 
        - !Ref Shared
      MemorySize: 512  
      Environment: 
        Variables:
          PATH: /tmp/bin
          PYTHON_PATH: /opt/python
          s3_bucket: !Ref ProcessingBucket
          use_guids_for_filenames: "no"
      Tags:
        Type: "lutils"
        Environment: lutils
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*"
            - Effect: Allow
              Action: "*"
              Resource: !Sub "arn:aws:s3:::${AWS::StackName}*/*"
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "sns:*"
              Resource: "*"
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref DownloadURLSeleniumSNS

  FanHandlerLambda:
    Type: AWS::Serverless::Function 
    Properties:
      Description: Inserts or deletes fan in records into the fan in table
      CodeUri: lutil_fan_handler/
      Handler: app.lambda_handler
      Runtime: python3.7
      Tags:
        Type: "lutils"
        Environment: lutils
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FanProcessingTable 
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref FanEventsTestSNS
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt FanProcessingTable.StreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON


  Shared:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: selenium-simplified
      Description: Dependencies for Selenium and the headless browser
      ContentUri: 
        Bucket: !Sub  "lutils-pipeline-artifactsbucket-98fi0mj7zik2"
        Key: "python-selenium-simplified.zip"
      CompatibleRuntimes:
        - python3.7

  ################################
  ### S3
  ################################
  ProcessingBucket:
    Type: AWS::S3::Bucket    
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for processing files and storing output
    Properties:
      Tags:
      - Key: Name
        Value: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - processing

  ################################
  ### SNS
  ################################
  S3FilenamesLSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "lutil_s3_filenames_output"
      TopicName: "lutil_s3_filenames_output"

  DownloadURLSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "lutil_s3_text_lines_output"
      TopicName: "lutil_s3_text_lines_output"

  DownloadURLSeleniumSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "lutil_s3_text_lines_output_selenium"
      TopicName: "lutil_s3_text_lines_output_selenium"

  FanEventsSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "lutil_fan_events"
      TopicName: "lutil_fan_events"

  FanEventsTestSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "lutil_fan_events_test"
      TopicName: "lutil_fan_events_test"

  ################################
  ### Tables
  ################################
  FanProcessingTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - 
          AttributeName: "pk"
          AttributeType: "S"
        - 
          AttributeName: "process_id"
          AttributeType: "S"
      KeySchema: 
        -
          AttributeName: "pk"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: process_id
          KeySchema:
            - AttributeName: process_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 0
            WriteCapacityUnits: 0
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES


  FanProcessingTableTest:
    Type: AWS::DynamoDB::Table
    Properties: 
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - 
          AttributeName: "pk"
          AttributeType: "S"
        - 
          AttributeName: "process_id"
          AttributeType: "S"
      KeySchema: 
        -
          AttributeName: "pk"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: process_id
          KeySchema:
            - AttributeName: process_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 0
            WriteCapacityUnits: 0
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

################################
### Outputs
################################
Outputs:
  S3TextLinesToSNSLambda:
    Description: "S3TextLinesToSNSLambda Lambda Function ARN"
    Value: !GetAtt S3TextLinesToSNSLambda.Arn

  S3ProcessingBucket:
    Description: "S3ProcessingBucket ARN"
    Value: !GetAtt ProcessingBucket.Arn

  FanProcesssingTable:
    Description: "FanProcessingTable ARN"
    Value: !GetAtt FanProcessingTable.Arn

  FanProcesssingTableName:
    Description: "FanProcessingTable Name"
    Value: !Select [1, !Split ['/', !GetAtt FanProcessingTable.Arn]] 

  FanProcesssingTestTableArn:
    Description: "FanProcessingTableTest ARN"
    Value: !GetAtt FanProcessingTableTest.Arn

  FanProcesssingTestTableName:
    Description: "FanProcessingTableTest Name"
    Value: !Select [1, !Split ['/', !GetAtt FanProcessingTableTest.Arn]] 

  
